%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Applied Numerical Methods I
% tridiag_driver.m
% Wilson Woods
% 12.2.2021
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

N = 4;

A2 = [ 4 2 0 0 ; 1 4 1 0 ; 0 1 4 1 ; 0 0 2 4 ];
f2 = [ pi/9 ; sqrt(3)/2 ; sqrt(3)/2 ; -pi/9 ];
[x2] = solve_tridiag(A2, f2, N)

A4 = [ 6 1 0 0 ; 2 4 1 0 ; 0 1 4 2 ; 0 0 1 6 ];
f4 = [ 8 ; 13 ; 22 ; 27 ];
[x4] = solve_tridiag(A4, f4, N)

A7 = [ 1 1/2 0 0 ; 1/2 1/3 1/4 0 ; 0 1/4 1/5 1/6 ; 0 0 1/6 1/7 ];

f7_1 = [ 2 ; 23/12 ; 53/30 ; 15/14 ];
[x7_1] = solve_tridiag(A7, f7_1, N)

f7_2 = [ 2 ; 2 ; 53/30 ; 15/14 ];
[x7_2] = solve_tridiag(A7, f7_2, N)

A10 = [ 1/2 10/21 0 0 ; 1/4 1/3 1/13 0 ; 0 1/5 1/4 1/21 ; 0 0 1/6 1/5 ];

f10_1 = [ 61/42 ; 179/156 ; 563/420 ; 13/10 ];
[x10_1] = solve_tridiag(A10, f10_1, N)

f10_2 = [ 61/42 ; 180/156 ; 563/420 ; 13/10 ];
[x10_2] = solve_tridiag(A10, f10_2, N)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% EOF %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
